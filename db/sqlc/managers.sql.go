// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: managers.sql

package db

import (
	"context"
)

const addManager = `-- name: AddManager :one
INSERT INTO "managers" (full_name,
                        username,
                        hashed_password)
VALUES ($1, $2, $3) RETURNING id, full_name, username, hashed_password
`

type AddManagerParams struct {
	FullName       string `json:"full_name"`
	Username       string `json:"username"`
	HashedPassword string `json:"hashed_password"`
}

func (q *Queries) AddManager(ctx context.Context, arg AddManagerParams) (Manager, error) {
	row := q.db.QueryRowContext(ctx, addManager, arg.FullName, arg.Username, arg.HashedPassword)
	var i Manager
	err := row.Scan(
		&i.ID,
		&i.FullName,
		&i.Username,
		&i.HashedPassword,
	)
	return i, err
}

const deleteManager = `-- name: DeleteManager :exec
DELETE FROM "managers" where id = $1
`

func (q *Queries) DeleteManager(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteManager, id)
	return err
}

const getManager = `-- name: GetManager :one
SELECT id, full_name, username, hashed_password FROM "managers" where username = $1
`

func (q *Queries) GetManager(ctx context.Context, username string) (Manager, error) {
	row := q.db.QueryRowContext(ctx, getManager, username)
	var i Manager
	err := row.Scan(
		&i.ID,
		&i.FullName,
		&i.Username,
		&i.HashedPassword,
	)
	return i, err
}
